generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Employee
  Spoc
  ADMIN
}

model Users {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
  spoc_name  String?
  spoc_email String?
  team  String
  sub_team String
  role  String?
}

model ProjectRecords {
  project_id   String   @id
  project_name String
  due_date     DateTime?
  audit_status String   @default("In Review")
  start_date   DateTime?
  name String
  email String
}

model MasterDatabase {
  id               Int       @id @default(autoincrement())
  date             DateTime?
  work_mode        String?
  project_name     String?
  task_name        String?
  book_element     String?
  chapter_number   String?
  hours_spent      Float?
  number_of_units  Int?
  unit_type        String?
  status           String?
  due_on           DateTime?
  details          String?
  audit_status     String?
  name             String
  team             String

  added_by_admin     Boolean   @default(false)
  edited_by_admin    Boolean   @default(false) 
  admin_action_by    String?   // admin's name/email
  admin_action_date  DateTime?

  @@map("MasterDatabase")
  
}

model MarkShift{
  date DateTime   @id
  name       String     // employee name
  email      String     // employee email
  spoc_name   String
  spoc_email  String
  shift_date  DateTime?
  shift_type  ShiftType?
}

enum ShiftType {
  NIGHT
  SUNDAY
}

model TodaysWorklog {
  id              Int      @id @default(autoincrement())
  date            DateTime 
  work_mode       String
  project_name    String?
  task_name       String
  book_element    String?
  chapter_number  String?  
  hours_spent     Float?  
  number_of_units Int ?   
  unit_type       String?   
  status          String?
  due_on          DateTime? 
  details         String?  
  name            String
  team            String   
  created_at      DateTime  @default(now())

  is_entry_request       Boolean?  @default(false)
  request_status         String?
  late_reason            String?   
  reviewed_at            DateTime?
  reviewed_by            String?

  added_by_admin         Boolean?  @default(false)
  admin_action_by        String?
  admin_action_date      DateTime?

  @@index([name, date])                                    
  @@index([name, is_entry_request, request_status])      
  @@index([name, date, is_entry_request])                
  @@index([team, date]) 

  @@map("TodaysWorklog")
}

model Abbreviations {
  id           Int     @id @default(autoincrement())
  full_name    String  
  abbreviation String  
  type         String  
  segment      String  

  @@map("Abbreviations")
}

model TeamWiseDropdowns {
  id           Int     @id @default(autoincrement())
  values       String
  column_header String
  team         String

  @@map("TeamWiseDropdowns")
}
